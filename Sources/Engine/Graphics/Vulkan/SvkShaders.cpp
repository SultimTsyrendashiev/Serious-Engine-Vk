#include "stdh.h"
#include <Engine/Graphics/GfxLibrary.h>

#ifdef SE1_VULKAN

#pragma region Shaders
// these shaders were generated by a script
#include <Engine/Graphics/Vulkan/Shaders/Compiled/TexturedVertSpv.h>
#include <Engine/Graphics/Vulkan/Shaders/Compiled/TexturedFragSpv.h>
#include <Engine/Graphics/Vulkan/Shaders/Compiled/TexturedAlphaFragSpv.h>

extern unsigned char TexturedVert_Spirv[];
extern unsigned int TexturedVert_Size;
extern unsigned char TexturedFrag_Spirv[];
extern unsigned int TexturedFrag_Size;
extern unsigned char TexturedAlphaFrag_Spirv[];
extern unsigned int TexturedAlphaFrag_Size;
#pragma endregion

void CGfxLibrary::CreateShaderModules()
{
  gl_VkShaderModuleVert = CreateShaderModule((uint32_t *)TexturedVert_Spirv, TexturedVert_Size);
  gl_VkShaderModuleFrag = CreateShaderModule((uint32_t *)TexturedFrag_Spirv, TexturedFrag_Size);
  gl_VkShaderModuleFragAlpha = CreateShaderModule((uint32_t *)TexturedAlphaFrag_Spirv, TexturedAlphaFrag_Size);
}

void CGfxLibrary::DestroyShaderModules()
{
  vkDestroyShaderModule(gl_VkDevice, gl_VkShaderModuleVert, nullptr);
  vkDestroyShaderModule(gl_VkDevice, gl_VkShaderModuleFrag, nullptr);
  vkDestroyShaderModule(gl_VkDevice, gl_VkShaderModuleFragAlpha, nullptr);
}

#endif